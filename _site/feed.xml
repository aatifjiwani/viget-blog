<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-18T17:00:31-06:00</updated><id>http://localhost:4000/</id><title type="html">Jiwani | Viget Blog 2018</title><subtitle>This is a blog created for my 2018 Viget Internship as their Rails Developer intern. </subtitle><entry><title type="html">Wow I’m Dumb</title><link href="http://localhost:4000/seventh/2018/07/17/uneventful.html" rel="alternate" type="text/html" title="Wow I'm Dumb" /><published>2018-07-17T00:00:00-06:00</published><updated>2018-07-17T00:00:00-06:00</updated><id>http://localhost:4000/seventh/2018/07/17/uneventful</id><content type="html" xml:base="http://localhost:4000/seventh/2018/07/17/uneventful.html">&lt;p&gt;Today was pretty uneventful. There wasn’t enough FED stuff done for me to go in and do my backend stuff. So today all I did was iOS development. YAY!!!!!!!! Except I’ve been doing the same tutorial for like a week and a half now and honestly I’m kinda getting bored by listening to that guy just ramble on and me trying to follow along.&lt;/p&gt;

&lt;p&gt;There wasn’t much that I learned either besides what an &lt;code class=&quot;highlighter-rouge&quot;&gt;inputAccessoryView&lt;/code&gt; is and how to build it.&lt;/p&gt;

&lt;p&gt;However, I did get caught on one thing. Last week, I was struggling because for some reason, the tap gestures on my images wouldn’t work. I don’t know why they didn’t work but for some reason they just didn’t. Today, I came across the same gosh darn problem. I tried all the ways to fix my problem by refactoring the code, moving definitions elsewhere, etc. It just wasn’t working. So, I decided to give up and finally create an account on Stack Overflow and ask the question. Here is the link if you want it. &lt;a href=&quot;https://stackoverflow.com/questions/51391053/uiimageview-tap-gesture-not-recognizing-user-interaction-is-enabled&quot;&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Surprisingly, somebody answered within like 5 minutes and solved my problem. And the solution really made me look stupid. Instead of setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;target&lt;/code&gt; of the gesture to &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt; like it’s supposed to be, I accidentally set it to &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;. What kinda ticks me off the most is how I never caught that error. I was literally staring at my code for like 10 minutes and still didn’t realize it until I used Stack Overflow.&lt;/p&gt;

&lt;p&gt;Well that’s it today. Tomorrow imma work on the group project more.&lt;/p&gt;</content><author><name></name></author><category term="seventh" /><summary type="html">Today was pretty uneventful. There wasn’t enough FED stuff done for me to go in and do my backend stuff. So today all I did was iOS development. YAY!!!!!!!! Except I’ve been doing the same tutorial for like a week and a half now and honestly I’m kinda getting bored by listening to that guy just ramble on and me trying to follow along.</summary></entry><entry><title type="html">Group Project Day</title><link href="http://localhost:4000/seventh/2018/07/16/no-ios.html" rel="alternate" type="text/html" title="Group Project Day" /><published>2018-07-16T00:00:00-06:00</published><updated>2018-07-16T00:00:00-06:00</updated><id>http://localhost:4000/seventh/2018/07/16/no-ios</id><content type="html" xml:base="http://localhost:4000/seventh/2018/07/16/no-ios.html">&lt;p&gt;Today was very unsatisfying in some ways. I came in this morning thinking I would be able to finish handling the Create Poll form in a couple hours but it ended up taking the ENTIRE DAY!!!! I didn’t really mind working on the group project all day because in the end, that’s pretty much my job here as an intern and I love to code. But I lowkey was looking forward to be able to continue with the Chat App tutorial so I could finally start working on making the mobile app for the group project.&lt;/p&gt;

&lt;p&gt;One thing that I did learn when working on this specific feature is to attach a status code to your JSON response back to the browser. For instance, if a user didn’t put the information properly, I responded back with a:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stuff&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: :unprocessable_entity&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I think that’s a 522 status error code and you can replace that status line with any error type you want. This then allows me to bind an ajax error handler to the specific element like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;poll-form&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ajax:error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So yeah that’s it. Otherwise, the PR is up and ready to be revieeeewwweeeeeeeeeeeeddddddddddddddddd. See ya tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="seventh" /><summary type="html">Today was very unsatisfying in some ways. I came in this morning thinking I would be able to finish handling the Create Poll form in a couple hours but it ended up taking the ENTIRE DAY!!!! I didn’t really mind working on the group project all day because in the end, that’s pretty much my job here as an intern and I love to code. But I lowkey was looking forward to be able to continue with the Chat App tutorial so I could finally start working on making the mobile app for the group project.</summary></entry><entry><title type="html">Finished Week 6</title><link href="http://localhost:4000/sixth/2018/07/13/finished-week-6.html" rel="alternate" type="text/html" title="Finished Week 6" /><published>2018-07-13T00:00:00-06:00</published><updated>2018-07-13T00:00:00-06:00</updated><id>http://localhost:4000/sixth/2018/07/13/finished-week-6</id><content type="html" xml:base="http://localhost:4000/sixth/2018/07/13/finished-week-6.html">&lt;p&gt;Today wasn’t that bad honestly. I didn’t really work on the group project because I’m still waiting on Peyton’s stuff and no one reviewed my PR that I put up yesterday. That kinda sucks because the PR isn’t that big and it would be nice to be able to finally merge that branch into master so I don’t have to worry about it ever again.&lt;/p&gt;

&lt;p&gt;So instead of the group project, I continued following the tutorial on how to create a basic chat app. I surprisingly didn’t run into any problems but now I realized something: This app is getting complex. It’s getting harder to figure out what is where and what does what exactly. All my stuff is organized but there is already so much code that it gets harder to think about how to fix something that may be wrong.&lt;/p&gt;

&lt;p&gt;I didn’t really learn anything new today besides the history of audio recording (Thanks Riley) and I simply continued developing this mobile app. 
Also, this marks the end of the 6th week of my Viget internship and this is nuts!!!! I can’t beliebe all this time is flying by and I really wish I could stay here longer and get paid to code.&lt;/p&gt;

&lt;p&gt;Cya next week!&lt;/p&gt;</content><author><name></name></author><category term="sixth" /><summary type="html">Today wasn’t that bad honestly. I didn’t really work on the group project because I’m still waiting on Peyton’s stuff and no one reviewed my PR that I put up yesterday. That kinda sucks because the PR isn’t that big and it would be nice to be able to finally merge that branch into master so I don’t have to worry about it ever again.</summary></entry><entry><title type="html">Today Was Difficult</title><link href="http://localhost:4000/sixth/2018/07/12/difficult.html" rel="alternate" type="text/html" title="Today Was Difficult" /><published>2018-07-12T00:00:00-06:00</published><updated>2018-07-12T00:00:00-06:00</updated><id>http://localhost:4000/sixth/2018/07/12/difficult</id><content type="html" xml:base="http://localhost:4000/sixth/2018/07/12/difficult.html">&lt;p&gt;Wow what a day! I had two things I needed to do. One was be able to handle user sessions with the new design because the way Devise does it won’t satisfy the specifications. Devise has it so that when the user makes a POST request, the page refreshes and any error that come up appear on the page after reload. However, we can’t reload the page because the modal will dissapear and the user will be confused. In order to do this, I had to override the &lt;code class=&quot;highlighter-rouge&quot;&gt;Registrations#Create&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sessions#Create&lt;/code&gt; methods so that they return a JSON response to the browser. Then, the forms have to make an AJAX POST request to the backend and yeah you could probably take it from there. However, figuring out how to override the &lt;code class=&quot;highlighter-rouge&quot;&gt;Sessions#Create&lt;/code&gt; method was confusing as heck. Devise uses Warden to authenticate their users and trying to figure out where the code flow goes was hard. After a little while, I figured out that invalid credentials returns an HTTP status error and I figured I could check if there was an error when making a request in order to display the error message to the user. This took 3 hours to figure out and boy was it a doozy.&lt;/p&gt;

&lt;p&gt;Next, I continued to work on the chat app for iOS using Firebase and that caused a lot of errors. But I also learned a couple new things. One, I learned that API calls are asynchronous methods and are made on a background thread. I didn’t realize this before and I got super frustrated. In order to solve this problem, I learned more about completion handlers and now my code is fixed! There was one part though that was causing a lot of errors and it was where I wanted to retrieve images from the Firebase storage. As I was running my code, I would always get a &lt;code class=&quot;highlighter-rouge&quot;&gt;EXC_BAD_ACCESS&lt;/code&gt; error or whatever and I really didn’t understand why. So instead of using what Firebase says to retrieve images, I just used a &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSession&lt;/code&gt; in order to get the data from the URL that was given.&lt;/p&gt;

&lt;p&gt;Well that’s all for today so see ya.&lt;/p&gt;</content><author><name></name></author><category term="sixth" /><summary type="html">Wow what a day! I had two things I needed to do. One was be able to handle user sessions with the new design because the way Devise does it won’t satisfy the specifications. Devise has it so that when the user makes a POST request, the page refreshes and any error that come up appear on the page after reload. However, we can’t reload the page because the modal will dissapear and the user will be confused. In order to do this, I had to override the Registrations#Create and Sessions#Create methods so that they return a JSON response to the browser. Then, the forms have to make an AJAX POST request to the backend and yeah you could probably take it from there. However, figuring out how to override the Sessions#Create method was confusing as heck. Devise uses Warden to authenticate their users and trying to figure out where the code flow goes was hard. After a little while, I figured out that invalid credentials returns an HTTP status error and I figured I could check if there was an error when making a request in order to display the error message to the user. This took 3 hours to figure out and boy was it a doozy.</summary></entry><entry><title type="html">Simple Chat App</title><link href="http://localhost:4000/sixth/2018/07/11/cool-stuff.html" rel="alternate" type="text/html" title="Simple Chat App" /><published>2018-07-11T00:00:00-06:00</published><updated>2018-07-11T00:00:00-06:00</updated><id>http://localhost:4000/sixth/2018/07/11/cool-stuff</id><content type="html" xml:base="http://localhost:4000/sixth/2018/07/11/cool-stuff.html">&lt;p&gt;Today I didn’t do much besides start the second iOS tutorial for creating a simple chat app. Don’t take that the wrong way because I spent the entire day doing that and I gotta admit it was pretty fun. The tutorial introduced me to Google Firebase which is actually a really nice way for authenticating users. So if I ever need to have users in my mobile app, Firebase here I come.&lt;/p&gt;

&lt;p&gt;One new thing I did in this tutorial besides implementing text fields and Firebase was adding gestures. adding Gestures, if I am getting this right, are for elements that are not buttons and you can trigger an event from any element based on any gesture. At first, I had a problem with my code because I defined and added the gesture within the instantiation block. However, I guess you can’t do that anymore with Swift 4 and I had to move the adding and registering the gesture down to where I add the specific view as a subview.&lt;/p&gt;

&lt;p&gt;That’s pretty much it so this blog is kinda short. That’s okay maybe I’ll make up for it tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="sixth" /><summary type="html">Today I didn’t do much besides start the second iOS tutorial for creating a simple chat app. Don’t take that the wrong way because I spent the entire day doing that and I gotta admit it was pretty fun. The tutorial introduced me to Google Firebase which is actually a really nice way for authenticating users. So if I ever need to have users in my mobile app, Firebase here I come.</summary></entry><entry><title type="html">Yay I Fixed It</title><link href="http://localhost:4000/sixth/2018/07/10/fixed.html" rel="alternate" type="text/html" title="Yay I Fixed It" /><published>2018-07-10T00:00:00-06:00</published><updated>2018-07-10T00:00:00-06:00</updated><id>http://localhost:4000/sixth/2018/07/10/fixed</id><content type="html" xml:base="http://localhost:4000/sixth/2018/07/10/fixed.html">&lt;p&gt;So if you read yesterday’s blog post, I said I encountered a problem with the method &lt;code class=&quot;highlighter-rouge&quot;&gt;setValuesWithKeys(dict: Dictionary)&lt;/code&gt;. Today, I finally found the solution to that problem and it was by simply adding &lt;code class=&quot;highlighter-rouge&quot;&gt;@objc&lt;/code&gt; in front of the attributes you wanted assigned by the method. This is needed because in Swift 3, I guess every object was kinda treated like an Objective-C object and that it was able to be encoded with values from another source. However, Swift 4 removed that option and now you have to manually tell Swift that I want this object treated as if it was in Objective-C. I don’t understand why there are those differences but oh well.&lt;/p&gt;

&lt;p&gt;Once I fixed that problem, I pretty much finished up the AppStore tutorial. Everything pretty much does look like the actual App Store except for a few key things. Now, I am going to work on the chat app using Firebase. Hopefully when I finish that by the end of this week, I have enough experience to start developing on my own.&lt;/p&gt;

&lt;p&gt;Today was pretty normal so nothing else I need to say. See ya tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="sixth" /><summary type="html">So if you read yesterday’s blog post, I said I encountered a problem with the method setValuesWithKeys(dict: Dictionary). Today, I finally found the solution to that problem and it was by simply adding @objc in front of the attributes you wanted assigned by the method. This is needed because in Swift 3, I guess every object was kinda treated like an Objective-C object and that it was able to be encoded with values from another source. However, Swift 4 removed that option and now you have to manually tell Swift that I want this object treated as if it was in Objective-C. I don’t understand why there are those differences but oh well.</summary></entry><entry><title type="html">Mobile Dev Time</title><link href="http://localhost:4000/sixth/2018/07/09/mobile-dev.html" rel="alternate" type="text/html" title="Mobile Dev Time" /><published>2018-07-09T00:00:00-06:00</published><updated>2018-07-09T00:00:00-06:00</updated><id>http://localhost:4000/sixth/2018/07/09/mobile-dev</id><content type="html" xml:base="http://localhost:4000/sixth/2018/07/09/mobile-dev.html">&lt;p&gt;Today it starts! I am using Lets Build That App on YouTube to help me get jumpstarted on iOS development. As I am going through these lessons, slowly but surely, I’ve noticed a few things. One is that Swift is a seamless but complicated language. There are so many components to it and so much to keep track of that it can be a little much sometimes. However, Swift looks really cool and XCode is pretty nice so I’m not complaining a whole lot. Next, I’ve learned that in order to do good mobile dev for iOS, you need to know a LOT of methods. The tutorial I am going through now doesn’t use the GUI to outline the UI but instead hardcodes everything, including the constraints. In order to do so, there are so many fricken methods and some of those methods have enormous names. Like the method name itself is like 30 characters long and I’m thinking to myself, “How the heck am I supposed to remember that…?”&lt;/p&gt;

&lt;p&gt;I did come across a problem that I still haven’t fixed though. Apparently, making API requests and getting the response in a JSON format is more complicated than it seems. I can’t follow the tutorial closely because the dude is using Swift 3 while I am using Swift 4. The two versions vary mostly in that the method names are different and there are a lot of deprecated things. So, I’ve encountered a problem where I get the following error:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Cannot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscript&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Data'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I get this error because apparently the method &lt;code class=&quot;highlighter-rouge&quot;&gt;setValuesWithKeys(dict: NSDictionary)&lt;/code&gt; can’t read the JSON response properly and can’t bind the matching values with the class attributes. This is pissing me off because I can’t use the solution the YouTube video has because it is using Swift 3 and not 4. So now, I have to go ahead and find a solution online which I will do tomorrow.&lt;/p&gt;

&lt;p&gt;In terms of the group project, Devise is confusing. As a group, we’ve decided the sign in/up page will be a modal that pops up on the current page and Devise wasn’t made for that type of manipulation by default. So it took a lot of digging around the gem file to figure out how I could redirect the POST request to an overriden method that signs the user in or creates a new one and returns some data to update specific elements. I got it now but it sure was confusing because of all the methods that Devise uses in order to authenticate or create a new user.&lt;/p&gt;

&lt;p&gt;That’s all for today, see ya tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="sixth" /><summary type="html">Today it starts! I am using Lets Build That App on YouTube to help me get jumpstarted on iOS development. As I am going through these lessons, slowly but surely, I’ve noticed a few things. One is that Swift is a seamless but complicated language. There are so many components to it and so much to keep track of that it can be a little much sometimes. However, Swift looks really cool and XCode is pretty nice so I’m not complaining a whole lot. Next, I’ve learned that in order to do good mobile dev for iOS, you need to know a LOT of methods. The tutorial I am going through now doesn’t use the GUI to outline the UI but instead hardcodes everything, including the constraints. In order to do so, there are so many fricken methods and some of those methods have enormous names. Like the method name itself is like 30 characters long and I’m thinking to myself, “How the heck am I supposed to remember that…?”</summary></entry><entry><title type="html">I Know What To Do</title><link href="http://localhost:4000/fifth/2018/07/06/i-chose-mobile-dev.html" rel="alternate" type="text/html" title="I Know What To Do" /><published>2018-07-06T00:00:00-06:00</published><updated>2018-07-06T00:00:00-06:00</updated><id>http://localhost:4000/fifth/2018/07/06/i-chose-mobile-dev</id><content type="html" xml:base="http://localhost:4000/fifth/2018/07/06/i-chose-mobile-dev.html">&lt;p&gt;Ahh, what a relaxing lil break I just had celebrating our country and my mom’s birthday. Now, it’s time to get back to work! Today was kinda busy and I wasn’t able to really get grunt work done since I was in a couple standups and we had FLF. However, what I was able to do was talk to Prayash about where to go from here. I learned a lot from the little session we had because he showed me the quirks of React and how it is awesome but also how mobile development in pure Swift looks like.&lt;/p&gt;

&lt;p&gt;So I’ve made a decision. In my eyes as a developer, when I am learning new things, I like to take the hard route. I like learning all the nitty-gritty basics and how to create something by using as little of external libraries as possible. Therefore, for the rest of my internship, I want to start building an app for iOS using pure Swift. I chose this because I want to master the basics of app development and then be able to take it a step further and use React native for future applications. This allows me to learn the concept of building mobile apps without taking the easy way like React allows you to kinda do. Easy meaning that there are things to make your life easier as a developer which is what React pretty much is.&lt;/p&gt;

&lt;p&gt;Also, I’ve been able to update the READMEs on my github repositories so other employers or visitors can see what the actual repo is for without digging through all the code and extraneous files.&lt;/p&gt;

&lt;p&gt;Later today, I am going to edit some of the backend for This or That in order to include the ability to have your polls expire after a given amount of time. This should be pretty easy and not something that will take long.&lt;/p&gt;

&lt;p&gt;Otherwise, see you next week!!!&lt;/p&gt;</content><author><name></name></author><category term="fifth" /><summary type="html">Ahh, what a relaxing lil break I just had celebrating our country and my mom’s birthday. Now, it’s time to get back to work! Today was kinda busy and I wasn’t able to really get grunt work done since I was in a couple standups and we had FLF. However, what I was able to do was talk to Prayash about where to go from here. I learned a lot from the little session we had because he showed me the quirks of React and how it is awesome but also how mobile development in pure Swift looks like.</summary></entry><entry><title type="html">What Do I Do Now?</title><link href="http://localhost:4000/fifth/2018/07/03/what-to-do.html" rel="alternate" type="text/html" title="What Do I Do Now?" /><published>2018-07-03T00:00:00-06:00</published><updated>2018-07-03T00:00:00-06:00</updated><id>http://localhost:4000/fifth/2018/07/03/what-to-do</id><content type="html" xml:base="http://localhost:4000/fifth/2018/07/03/what-to-do.html">&lt;p&gt;So today, I finished addressing the comments on the backend structure PR for This or That and now I am wondering, what do I do now?&lt;/p&gt;

&lt;p&gt;I’ve been able to occupy myself for quite a while today because I had a Boulder office lunch with the CEO and I had a couple meetings here and there. But besides that, I have no clue what I do now.&lt;/p&gt;

&lt;p&gt;In order to solve that problem, I did two things. One, I talked to Prayash about mobile dev/React to see how I can start looking at mobile development as an option for the rest of my internship. Of course I won’t be ditching Rails at all because I still have to use it in order to create the group project. However, I don’t really want to always do Rails and I’ve always had an interest in mobile development. So maybe that can be an option.&lt;/p&gt;

&lt;p&gt;Second, I started looking into how Chrome extensions are made. I thought it was always pretty cool that you could create extensions that can interact with the webpage you are currently on. So therefore, I started to take a peek at the documentation and got started on my first ever Chrome extension. However, learning how to do so is really confusing. The Google dev documentation on how to build extensions is pretty confusing and hard to follow. I got the basics down like having a manifest where you declare what all you’re going to use and what permissions you need, but I still don’t know how to make things work together. So after a little bit of tinkering before I have to leave, I was able to get the extension working to where it changed the color of the background on the page you’re currently on to orange. Isn’t that cool! Syke it’s super boring right now but maybe I’ll experiment with it later.&lt;/p&gt;

&lt;p&gt;Tomorrow if July 4th and Thursday is my mom’s birthday so I won’t be working until Friday. See ya’ll then!&lt;/p&gt;</content><author><name></name></author><category term="fifth" /><summary type="html">So today, I finished addressing the comments on the backend structure PR for This or That and now I am wondering, what do I do now?</summary></entry><entry><title type="html">It Begins</title><link href="http://localhost:4000/fifth/2018/07/02/it-begins.html" rel="alternate" type="text/html" title="It Begins" /><published>2018-07-02T00:00:00-06:00</published><updated>2018-07-02T00:00:00-06:00</updated><id>http://localhost:4000/fifth/2018/07/02/it-begins</id><content type="html" xml:base="http://localhost:4000/fifth/2018/07/02/it-begins.html">&lt;p&gt;If you noticed I skipped Friday’s post of last week, I’m sorry. I got super busy and I just didn’t have time to write a post by the end of the day. 
However. today I finished Haxxor News!! All the PRs got approved and it is officially deployed at [haxxornews-vgt.herokuapp.com].&lt;/p&gt;

&lt;p&gt;After I got that finished, I started making ground on the intern group project. I was able to figure out Devise and authenticate a user with their modules. It’s kinda weird how the gem works. It literally creates all the controllers for you which is pretty cool but can be pretty confusing. If you want to do custom stuff to the controller, you have to extend it from the super controller and override the methods. It also generates all the views for you so you don’t have to bother creating the forms for user registration or sign in. Right now, the forms are unstyled and the app looks pretty odd right now but I’m going to wait till Peyton can get working on styling all that stuff before I can really say anything.&lt;/p&gt;

&lt;p&gt;Once completing that, I started working on all the models that the app might need at first glance. I created the Poll, Vote, Comment, and Follow models as well as implemented the respective validations and associations. Also, I created, or am in the process of creating, the specs for each model. While I was creating the model spec for Follows, Eli taught me something pretty sweet. If you want to find the polls that the user is following, you can write an association like&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:followed_polls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through: :follows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;source: :poll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, you can execute user.followed_polls and get a list of all the polls that the user follows. Isn’t that fricken sick!!!!!!!!!&lt;/p&gt;

&lt;p&gt;I know that association is really going to come in handy when we want to display all the polls a user follows.&lt;/p&gt;

&lt;p&gt;Well, that’s it for today and I am going to continue working on this tomorrow. Bye!&lt;/p&gt;</content><author><name></name></author><category term="fifth" /><summary type="html">If you noticed I skipped Friday’s post of last week, I’m sorry. I got super busy and I just didn’t have time to write a post by the end of the day. However. today I finished Haxxor News!! All the PRs got approved and it is officially deployed at [haxxornews-vgt.herokuapp.com].</summary></entry></feed>