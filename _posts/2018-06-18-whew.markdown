---
layout: post
title:  Whew, I did it.
date:   2018-06-18
category: third
comments: true
---

Dang, it's my third week already here at Viget. Time really flies by. 

Today, I did a lot in terms of fixing some stuff in my pull requests (Thanks Eli and David!)

For my first pull request, which was the branch that managed password resets, I fixed a lot of security issues. I learned that some people aren't stupid and could inspect my html and see some hidden fields. For some context, I had the user id stored in a hidden field on my html so I could reference it when I wanted to update the user's password. Now, I fixed it to be where I stored the user in a session variable and then destroyed it once the user has successfully reset their password. Then, there was an issue where I had the password token for each user be unique and if I regenerated the password token, the app could crash because the regenerated password token matched another user. I fixed this issue to make it so the password token is NOT unique but the reset password url contains the user's email for extra validation. Finally, I fixed an issue where I put my gmail account's unique app password in my commit (which can be apparently used to hack into my gmail, whoops) but now the password is stored in the encrypted credentials file. 

For my second and final PR, which was user-post interaction, I fixed some small thingss. These fixes are mainly efficiency fixes and being able to handle future complexity. I made some logical changes where some methods are stored in different areas and accessed differently. 

After all that was done, I had to push everything to Heroku. This may seem like a non-daunting task but I didn't push anything to Heroku since I created my article model. So my app didn't have any user functionality yet. When I pushed my changes to Heroku, a couple things happened. My heroku master branch was apparently a commit ahead of my local branch so I had to 

{% highlight ruby %}
git push --force heroku master
{% endhighlight %}

Then, there was apparently a syntax error in my javascript file but oddly enough, the error log didn't really specifty that. It instead said: 

{% highlight ruby %}
Uglifier::Error: Unexpected token: punc ((). To use ES6 syntax, harmony mode must be enabled with Uglifier.new(:harmony => true)
{% endhighlight %}

Lol it's kinda funny that the class name is Uglifier. That's hilarious lmfao. But that error apparently means that there's something wrong with my javascript, specifically the javascript that implemented the formatting toolbar. Thankfully, I figured it out and fixed the issue. 

With a miracle, my app compiled correctly and everything works! I added a article model spec because I had a silly error where I didn't account for a nil user when checking who the parent of the article was. 

With my remaining time for the day, I am going to add a comment controller as well as a model. I will prolly continue with this tomorrow as well. 